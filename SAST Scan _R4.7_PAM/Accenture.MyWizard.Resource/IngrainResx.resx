<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CorrelatioUIDEmpty" xml:space="preserve">
    <value>CorrelatioUID is Empty</value>
  </data>
  <data name="CorrelatioUIdNotMatch" xml:space="preserve">
    <value>No Data For CorrelationId</value>
  </data>
  <data name="Created" xml:space="preserve">
    <value>Data Saved Successfully.</value>
  </data>
  <data name="DuplicateUser" xml:space="preserve">
    <value>Duplicate user</value>
  </data>
  <data name="DataEngineering" xml:space="preserve">
    <value>Data Engineering completed success</value>
  </data>
  <data name="DeleteModelcompleted" xml:space="preserve">
    <value>Delete Model completed successfully</value>
  </data>
  <data name="DeployModelcompleted" xml:space="preserve">
    <value>Deploy Model completed successfully</value>
  </data>
  <data name="EmptyData" xml:space="preserve">
    <value>No data Found in dataabase for CorrelationId</value>
  </data>
  <data name="EmptyReqBody" xml:space="preserve">
    <value>Empty Request Body</value>
  </data>
  <data name="EngineeringDataError" xml:space="preserve">
    <value>Error at Data Engineering</value>
  </data>
  <data name="ErrorDataEngineering" xml:space="preserve">
    <value>Error at Data Engineering:</value>
  </data>
  <data name="ErrorModelEngineering" xml:space="preserve">
    <value>Error at Model Engineering</value>
  </data>
  <data name="FailedStatusCode" xml:space="preserve">
    <value>fail</value>
  </data>
  <data name="FileEmpty" xml:space="preserve">
    <value>No Data on File</value>
  </data>
  <data name="FileExtensionNotSupport" xml:space="preserve">
    <value>Application supports only .csv and .xlsx or xls</value>
  </data>
  <data name="FileNotExist" xml:space="preserve">
    <value>File Not Exist</value>
  </data>
  <data name="FileNotValid" xml:space="preserve">
    <value>Input File Not Valid</value>
  </data>
  <data name="FileSize" xml:space="preserve">
    <value>File size is Exceeded.</value>
  </data>
  <data name="HTIDEmpty" xml:space="preserve">
    <value>HTId is Empty</value>
  </data>
  <data name="InputData" xml:space="preserve">
    <value>InputData Empty</value>
  </data>
  <data name="InternalServererror" xml:space="preserve">
    <value>Error While Processing..</value>
  </data>
  <data name="InvalidInputData" xml:space="preserve">
    <value>Invalid Input data</value>
  </data>
  <data name="MailNotSent" xml:space="preserve">
    <value>SMTP Mails are not sent..</value>
  </data>
  <data name="ModelEngineeringcompleted" xml:space="preserve">
    <value>Model Engineering completed successfully</value>
  </data>
  <data name="ModelNameExist" xml:space="preserve">
    <value>Model name already exist. Kindly proceed with different name.</value>
  </data>
  <data name="ModelsFailedTraining" xml:space="preserve">
    <value>All Models Failed while Training</value>
  </data>
  <data name="Nomodelstrained" xml:space="preserve">
    <value>No models trained for this correlation id, to proceed Deploy Model</value>
  </data>
  <data name="NoRecordFound" xml:space="preserve">
    <value>No record found for Correlation Id in Deploy Model</value>
  </data>
  <data name="NorecordfoundforID" xml:space="preserve">
    <value>No record found for Insta Id/Correlation Id</value>
  </data>
  <data name="Predictioncompleted" xml:space="preserve">
    <value>Prediction completed successfully</value>
  </data>
  <data name="PredictionFailed" xml:space="preserve">
    <value>Prediction Failed</value>
  </data>
  <data name="RefitModelcompleted" xml:space="preserve">
    <value>Refit Model completed successfully</value>
  </data>
  <data name="RunPython" xml:space="preserve">
    <value>PythonProcess Initiated</value>
  </data>
  <data name="SuccessStatusCode" xml:space="preserve">
    <value>success</value>
  </data>
  <data name="UploadFile" xml:space="preserve">
    <value>File upload success</value>
  </data>
  <data name="UserIdEmpty" xml:space="preserve">
    <value>UserID is Empty</value>
  </data>
  <data name="UserIdNotMatch" xml:space="preserve">
    <value>UserID does not exist</value>
  </data>
  <data name="UserNotExist" xml:space="preserve">
    <value>Username or Password incorrect.</value>
  </data>
  <data name="WFIDEmpty" xml:space="preserve">
    <value>WFId is Empty</value>
  </data>
  <data name="AddFeatureSuccess" xml:space="preserve">
    <value>Success</value>
  </data>
  <data name="Mapping" xml:space="preserve">
    <value>Mapping has been Done.</value>
  </data>
  <data name="InputFieldsAreNull" xml:space="preserve">
    <value>ModelName or ClientUID or DeliverConstructID is null</value>
  </data>
  <data name="AttributesNull" xml:space="preserve">
    <value>Attributes should not be Null</value>
  </data>
  <data name="InputsEmpty" xml:space="preserve">
    <value>Request Inputs are Empty</value>
  </data>
  <data name="InputEmpty" xml:space="preserve">
    <value>Request Inputs are Empty</value>
  </data>
  <data name="SpecialCharacterNotAllowed" xml:space="preserve">
    <value>Special Character are not allowed</value>
  </data>
  <data name="ErrorDataTransformation" xml:space="preserve">
    <value>Error at Data Transformation</value>
  </data>
  <data name="InValidUser" xml:space="preserve">
    <value>UserName/UserId is Invalid</value>
  </data>
  <data name="InvalidGuid" xml:space="preserve">
    <value>ClientId/DCUID is InValid</value>
  </data>
  <data name="InValidFileName" xml:space="preserve">
    <value>Invalid file name</value>
  </data>
  <data name="InValidBrowser" xml:space="preserve">
    <value>Invalid browser name</value>
  </data>
  <data name="InValidLoggedInUser" xml:space="preserve">
    <value>In-Valid logged in User</value>
  </data>
  <data name="InValidToken" xml:space="preserve">
    <value>Please use proper token</value>
  </data>
</root>